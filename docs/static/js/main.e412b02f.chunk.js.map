{"version":3,"sources":["Footer.js","WeatherTemperature.js","WeatherIcon.js","WeatherForecastPreview.js","Forecast.js","FormattedDate.js","WeatherSearch.js","App.js","index.js"],"names":["Footer","className","href","target","rel","WeatherTemperature","props","useState","unit","setUnit","id","Math","round","celsius","onClick","event","preventDefault","fahrenheit","WeatherIcon","url","icon","src","alt","WeatherForecastPreview","hours","Date","data","dt","getHours","weather","main","temp","Forecast","loaded","setLoaded","forecast","setForecast","lastSearch","setLastSearch","city","list","axios","get","then","response","FormattedDate","day","date","getDay","minutes","getMinutes","WeatherSearch","ready","setWeather","apiKey","handleResponse","name","description","temperature","humidity","wind","speed","updatePosition","position","latitude","coords","longitude","form","onSubmit","document","querySelector","value","type","onChange","placeholder","autoFocus","aria-describedby","navigator","geolocation","getCurrentPosition","faMapMarkerAlt","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e412b02f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <small className=\"coded\">\n      <a\n        href=\"https://github.com/laura-dumitru/weather-react\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Open source code {\"\"}\n      </a>\n      by {\"\"}{\" \"}\n      <a\n        href=\"https://www.linkedin.com/in/laura-dumitru-923248137/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Laura Dumitru\n      </a>\n    </small>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function WeatherTemperature(props) {\n  const [unit, setUnit] = useState(\"celsius\");\n\n  function convertToFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function convertToCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  if (unit === \"celsius\") {\n    return (\n      <div className=\"temperature\">\n        <strong id=\"temperature\">{Math.round(props.celsius)}</strong>\n        <small>\n          <span id=\"celsius\">˚C</span>|\n          <span id=\"fahrenheit\">\n            <a href=\"/\" onClick={convertToFahrenheit}>\n              ˚F\n            </a>\n          </span>\n        </small>\n      </div>\n    );\n  } else {\n    let fahrenheit = (props.celsius * 9) / 5 + 32;\n    return (\n      <div className=\"temperature\">\n        <strong id=\"temperature\">{Math.round(fahrenheit)}</strong>\n        <small>\n          <span id=\"celsius\">\n            <a href=\"/\" onClick={convertToCelsius}>\n              ˚C\n            </a>\n          </span>\n          |<span id=\"fahrenheit\">˚F</span>\n        </small>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function WeatherIcon(props) {\n  let url = `https://raw.githubusercontent.com/laura-dumitru/Weather-App/master/img/${props.icon}.svg`;\n  return <img src={url} alt=\"icon\" />;\n}\n","import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\n\nexport default function WeatherForecastPreview(props) {\n  function hours() {\n    let date = new Date(props.data.dt * 1000);\n    let hours = date.getHours();\n    return `${hours}:00`;\n  }\n\n  function temperature() {\n    return Math.round(props.data.main.temp);\n  }\n\n  return (\n    <div className=\"col-2\">\n      {hours()}\n      <WeatherIcon icon={props.data.weather[0].icon} />\n      {temperature()}˚C\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\n\nexport default function Forecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n  const [lastSearch, setLastSearch] = useState(\"\");\n\n  function handleForecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n    setLastSearch(props.city);\n  }\n\n  if (loaded && props.city === lastSearch) {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"row card-text\" id=\"forecast\">\n            <WeatherForecastPreview data={forecast.list[0]} />\n            <WeatherForecastPreview data={forecast.list[1]} />\n            <WeatherForecastPreview data={forecast.list[2]} />\n            <WeatherForecastPreview data={forecast.list[3]} />\n            <WeatherForecastPreview data={forecast.list[4]} />\n            <WeatherForecastPreview data={forecast.list[5]} />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = \"e3dda97cfe9d9fc23a4b5fa7130913b1\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleForecastResponse);\n    return null;\n  }\n}\n","import React from \"react\";\n\nexport default function FormattedDate(props) {\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  let day = days[props.date.getDay()];\n  let hours = props.date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  let minutes = props.date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  return (\n    <div>\n      {day} {hours}:{minutes}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport WeatherTemperature from \"./WeatherTemperature\";\nimport Forecast from \"./Forecast\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherIcon from \"./WeatherIcon\";\n\nexport default function WeatherSearch(props) {\n  const [weather, setWeather] = useState({ ready: false, city: props.city });\n\n  const apiKey = \"e3dda97cfe9d9fc23a4b5fa7130913b1\";\n  let url = `https://api.openweathermap.org/data/2.5/weather?q=${weather.city}&appid=${apiKey}&units=metric`;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let inputCity = document.querySelector(\"#inputCity\");\n    inputCity.value = \"\";\n    axios.get(url).then(handleResponse);\n  }\n\n  function updateCity(event) {\n    url = `https://api.openweathermap.org/data/2.5/weather?q=${event.target.value}&appid=${apiKey}&units=metric`;\n  }\n\n  function handleResponse(response) {\n    setWeather({\n      ready: true,\n      date: new Date(response.data.dt * 1000),\n      city: response.data.name,\n      description: response.data.weather[0].description,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      icon: response.data.weather[0].icon,\n    });\n  }\n\n  function updatePosition(position) {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n    url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleResponse);\n  }\n\n  function getLocation() {\n    navigator.geolocation.getCurrentPosition(updatePosition);\n  }\n\n  let form = (\n    <form className=\"row\" id=\"search-form\" onSubmit={handleSubmit}>\n      <div className=\"form-group col-6\">\n        <input\n          type=\"search\"\n          onChange={updateCity}\n          placeholder=\"Enter city\"\n          className=\"form-control\"\n          autoFocus=\"on\"\n          aria-describedby=\"searchCity\"\n          id=\"inputCity\"\n        />\n      </div>\n      <input type=\"submit\" value=\"Search\" className=\"btn\" />\n\n      <button\n        type=\"button\"\n        className=\"btn location col-1\"\n        onClick={getLocation}\n      >\n        <FontAwesomeIcon icon={faMapMarkerAlt} className=\"fas\" />\n      </button>\n    </form>\n  );\n\n  if (weather.ready) {\n    return (\n      <div>\n        {form}\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <h1 id=\"city\">{weather.city}</h1>\n            <ul>\n              <li className=\"date\">\n                <FormattedDate date={weather.date} />\n              </li>\n            </ul>\n            <ul>\n              <li id=\"description\">{weather.description}</li>\n              <li>\n                Humidity: <span id=\"humidity\">{weather.humidity}%</span>\n              </li>\n              <li>\n                Wind: <span id=\"wind\">{weather.wind}km/h</span>\n              </li>\n            </ul>\n            <br />\n            <WeatherTemperature celsius={weather.temperature} />\n          </div>\n          <WeatherIcon icon={weather.icon} />\n        </div>\n        <Forecast city={weather.city} />\n      </div>\n    );\n  } else {\n    axios.get(url).then(handleResponse);\n    return form;\n  }\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./styles.css\";\nimport Footer from \"./Footer\";\nimport WeatherSearch from \"./WeatherSearch\";\n\nexport default function App() {\n  return (\n    <div className=\"weather-app\">\n      <div className=\"container\">\n        <WeatherSearch city=\"New York\" />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}